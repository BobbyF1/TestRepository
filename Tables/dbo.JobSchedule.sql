CREATE TABLE [dbo].[JobSchedule]
(
[Id] [int] NOT NULL IDENTITY(1, 1),
[JobId] [int] NOT NULL,
[ScheduleId] [int] NOT NULL,
[last_updated_date] [datetime] NULL CONSTRAINT [DF_JobSchedule_last_updated_date] DEFAULT (getdate()),
[creation_date] [datetime] NULL CONSTRAINT [DF_JobSchedule_creation_date] DEFAULT (getdate())
) ON [PRIMARY]
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

CREATE TRIGGER [dbo].[trg_JobSchedule_updated]
ON [dbo].[JobSchedule]
FOR UPDATE
AS
--start_autogenerated_trigger_text  - do not edit comments or code!
IF (suser_name() = 'svc_sync_user') OR (suser_name() = 'svc_agent_user')  RETURN
--end_autogenerated_trigger_text

BEGIN

	SET NOCOUNT ON 
 
	--PF 11/08/2015 Calculate next job time when its schedule changes

	DECLARE @JobId int

	DECLARE jobs CURSOR FOR 
	SELECT DISTINCT JobId FROM JobSchedule
	WHERE ScheduleId in (SELECT ScheduleId From inserted)

	OPEN jobs
	FETCH jobs into @JobId

	while @@FETCH_STATUS = 0
	BEGIN
		EXEC sp_set_next_trigger_time @JobId 
		FETCH jobs into @JobId	
	END

	CLOSE jobs
	DEALLOCATE jobs


 UPDATE dbo.JobSchedule SET dbo.JobSchedule.last_updated_date = GETDATE()
 FROM inserted
 WHERE inserted.Id = dbo.JobSchedule.Id

END
GO
ALTER TABLE [dbo].[JobSchedule] ADD CONSTRAINT [PK_JobSchedule] PRIMARY KEY CLUSTERED  ([Id]) ON [PRIMARY]
GO
CREATE NONCLUSTERED INDEX [ix_JobSchedule_JobId] ON [dbo].[JobSchedule] ([JobId]) ON [PRIMARY]
GO
